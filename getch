#include <stdio.h>
#include <termios.h>
#include <malloc.h>
typedef char* String;

struct termios newTerminal, oldTerminal;

void initTerminal(char Echoing){
    tcgetattr(0, &oldTerminal);
    newTerminal = oldTerminal;
    newTerminal.c_lflag &= ~ICANON;
    newTerminal.c_lflag &= Echoing ? ECHO : ~ECHO;
    tcsetattr(0, TCSANOW, &newTerminal);
}

void resetTerminal(void){
    tcsetattr(0, TCSANOW, &oldTerminal);
}

char getCh(void){
    initTerminal(0);
    char c;
    c = getchar();
    resetTerminal();
    return c;
}

String getPWD(unsigned long long passwordSize){
    String data = (String) calloc(passwordSize, sizeof(char));
    unsigned long long passwordCounter = 0;
    unsigned character = 0;
    while(passwordCounter < passwordSize &&
        ((character = getCh()) != EOF) && character != '\n'){
        if(character == newTerminal.c_cc[VERASE]){
            printf("\b \b");
            fflush(stdin);
            data[passwordCounter ? --passwordCounter : passwordCounter] = '\0';
            continue;
        }
        data[passwordCounter++] = character;
        printf("*");
    }
    printf("\n");
    return data;
}
